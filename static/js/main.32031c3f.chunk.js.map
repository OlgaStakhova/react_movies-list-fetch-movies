{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","setMovie","setMovies","useState","query","setQuery","errorSearch","setErrorSearch","isLoad","setIsLoad","htmlFor","type","id","placeholder","value","onChange","event","target","Response","Error","cn","disabled","trim","onClick","preventDefault","fetch","then","res","json","catch","getMovie","responseMovie","response","data","movieFormating","Title","Plot","Poster","imdbID","finally","some","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32031c3f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={\n            (!movie.imgUrl || movie.imgUrl === 'N/A')\n              ? 'images/defaultPoster.png'\n              : movie.imgUrl\n          }\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\n\ninterface Props {\n  setMovie: (movie: Movie | null) => void,\n  movie: Movie | null,\n  setMovies: (movie: Movie[]) => void,\n  movies: Movie[],\n}\n\nconst createMyvieObject = (response: MovieData): Movie => {\n  return {\n    title: response.Title,\n    description: response.Plot,\n    imgUrl: response.Poster,\n    imdbUrl: response.imdbID,\n    imdbId: response.imdbID,\n  };\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const {\n    setMovie, movie, setMovies, movies,\n  } = props;\n\n  const [query, setQuery] = useState('');\n  const [errorSearch, setErrorSearch] = useState<ResponseError | null>(null);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const handelSearchMovie = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    setIsLoad(true);\n    getMovie(query)\n      .then(responseMovie => {\n        const data = responseMovie;\n\n        if ('Error' in data) {\n          setErrorSearch(data);\n        } else {\n          const movieFormating = createMyvieObject(data);\n\n          setMovie(movieFormating);\n        }\n      })\n      .finally(() => setIsLoad(false));\n    setQuery('');\n    setMovie(null);\n  };\n\n  const handelAddMovie = () => {\n    if (movie && movies.some(item => item.imdbId === movie.imdbId)) {\n      setMovie(null);\n      setErrorSearch(null);\n\n      return;\n    }\n\n    if (movie) {\n      setMovies([...movies, movie]);\n      setMovie(null);\n      setErrorSearch(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            {\n              errorSearch\n            && !movie\n            && errorSearch.Response === 'False'\n            && query === ''\n            && !isLoad\n            && errorSearch.Error\n            }\n\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoad },\n              )}\n              disabled={query.trim() === ''}\n              onClick={handelSearchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handelAddMovie}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && <MovieCard movie={movie} /> }\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=52a93447';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovie={setMovie}\n          movie={movie}\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}